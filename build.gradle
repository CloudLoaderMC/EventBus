import ml.darubyminer360.gradleutils.GradleUtils

buildscript {
    dependencies {
        classpath('de.jjohannes.gradle:extra-java-module-info:0.14')
    }
}
plugins {
    id 'ml.darubyminer360.gradleutils' version '2.2.0'
    id 'com.github.ben-manes.versions' version '0.42.0'
}
apply plugin: 'maven-publish'

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'de.jjohannes.extra-java-module-info'
    
    group 'ml.cloudmc'
    java {
        toolchain.languageVersion = JavaLanguageVersion.of(16)
        modularity.inferModulePath.set(true)
    }
    version = gradleutils.getTagOffsetVersion()
    
    repositories {
        mavenLocal()
        maven {
            name = 'Cloud'
            url = 'https://maven.cloudmc.ml/releases'
        }
        maven {
            name = 'forge'
            url = 'https://maven.minecraftforge.net/'
        }
    }
    
    dependencies.testRuntimeOnly('org.apiguardian:apiguardian-api:1.1.2') // No idea why, but windows needs this to not explode.
    dependencies.implementation('net.sf.jopt-simple:jopt-simple:5.0.4') // Modlauncher depends on this but doesnt do it transitivly so the tests need it explit
    
    extraJavaModuleInfo {
        failOnMissingModuleInfo = false
        automaticModule('jmh-core-1.35.jar', 'jmh.core')
        automaticModule('jopt-simple-5.0.4.jar', 'jopt.simple') // TODO: Update ModLauncher to use jopt 6.0-alpha-3+, which sets the module name to 'joptsimple'
        automaticModule('typetools-0.8.3.jar', 'typetools')
    }
    
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { type -> version.toUpperCase().contains(type) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
    }

    dependencyUpdates {
        rejectVersionIf {
            isNonStable(it.candidate.version)
        }
    }
    
    // Hack eclipse into knowing that the gradle deps are modules
    eclipse {
        classpath {
            containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
            file {
                whenMerged {
                    entries.findAll { it.kind == 'con' && it.path == 'org.eclipse.buildship.core.gradleclasspathcontainer' }.each {
                        it.entryAttributes['module'] = 'true'
                    }
                }
            }
        }
    }
}

changelog {
    fromTag "1.0.0"
}

logger.lifecycle('Version: ' + version)

ext.sharedManifest = manifest {
    attributes([
        'Specification-Title': 'eventbus',
        'Specification-Vendor': 'Forge',
        'Specification-Version': '1', // Currently version 1 of the eventbus specification
        'Implementation-Title': project.name,
        'Implementation-Version': "${project.version}+${System.getenv("BUILD_NUMBER")?:0}+${gradleutils.gitInfo.branch}.${gradleutils.gitInfo.abbreviatedId}",
        'Implementation-Vendor' :'forge',
        'Implementation-Timestamp': java.time.Instant.now().toString(),
        'Git-Commit': gradleutils.gitInfo.abbreviatedId,
        'Git-Branch': gradleutils.gitInfo.branch,
        'Build-Number': "${System.getenv('BUILD_NUMBER')?:0}" 
    ] as LinkedHashMap, 'net/minecraftforge/eventbus/service/')
}

jar {
    manifest = project.manifest {
        from sharedManifest
    }
}
java.withSourcesJar()

dependencies {
    implementation('org.ow2.asm:asm:9.2')
    implementation('org.ow2.asm:asm-commons:9.2')
    implementation('org.ow2.asm:asm-tree:9.2')
    implementation('org.apache.logging.log4j:log4j-api:2.17.1')
    implementation('ml.cloudmc:ModLauncher:10.0.11')
    compileOnly('org.jetbrains:annotations:23.0.0')
    api('net.jodah:typetools:0.8.+')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Event Bus'
                description = 'High performance Event Bus library'
                url = 'https://github.com/CloudLoaderMC/EventBus'
                scm {
                    url = 'https://github.com/CloudLoaderMC/EventBus'
                    connection = 'scm:git:git://github.com/CloudLoaderMC/EventBus.git'
                    developerConnection = 'scm:git:git@github.com:CloudLoaderMC/EventBus.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/CloudLoaderMC/EventBus/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        id = 'DaRubyMiner360'
                        name = 'DaRubyMiner360'
                    }
                }
            }
        }
    }
    repositories {
        maven GradleUtils.getPublishingCloudMaven(project)
    }
}